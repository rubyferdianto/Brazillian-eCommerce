# Google Cloud Workflow for MongoDB to GCS Export
# This workflow orchestrates the MongoDB data export and upload to Google Cloud Storage

main:
  params: [input]
  steps:
    - init:
        assign:
          - project_id: ${sys.get_env("GOOGLE_CLOUD_PROJECT")}
          - bucket_name: ${default(map.get(input, "bucket_name"), "brazilian-ecommerce-data")}
          - export_timestamp: ${time.format(sys.now(), "%Y%m%d_%H%M%S")}
          - export_folder: ${"exports_" + export_timestamp}
          
    - log_start:
        call: sys.log
        args:
          text: ${"üöÄ Starting MongoDB to GCS export workflow for bucket: " + bucket_name}
          severity: INFO

    - run_export_script:
        call: http.post
        args:
          url: ${"https://" + location + "-" + project_id + ".cloudfunctions.net/mongodb-csv-exporter"}
          headers:
            Content-Type: "application/json"
          body:
            export_folder: ${export_folder}
            collections: [
              "customers",
              "sellers", 
              "orders",
              "order_items",
              "order_payments", 
              "order_reviews",
              "products",
              "geolocation",
              "product_categories"
            ]
        result: export_result

    - check_export_success:
        switch:
          - condition: ${export_result.code == 200}
            next: upload_to_gcs
          - condition: true
            next: export_failed

    - upload_to_gcs:
        call: upload_files_to_bucket
        args:
          bucket_name: ${bucket_name}
          export_folder: ${export_folder}
          files: ${export_result.body.files}
        result: upload_result

    - log_success:
        call: sys.log
        args:
          text: ${"‚úÖ Successfully exported and uploaded " + string(len(upload_result.uploaded_files)) + " files to bucket: " + bucket_name}
          severity: INFO

    - return_success:
        return:
          status: "success"
          message: "MongoDB data successfully exported to GCS"
          bucket: ${bucket_name}
          folder: ${export_folder}
          files_uploaded: ${len(upload_result.uploaded_files)}
          timestamp: ${export_timestamp}

    - export_failed:
        call: sys.log
        args:
          text: ${"‚ùå Export failed with status: " + string(export_result.code)}
          severity: ERROR
        next: return_failure

    - return_failure:
        return:
          status: "failed"
          message: "MongoDB export failed"
          error: ${export_result}

# Subworkflow to upload files to GCS bucket
upload_files_to_bucket:
  params: [bucket_name, export_folder, files]
  steps:
    - init_upload:
        assign:
          - uploaded_files: []
          - file_index: 0

    - upload_loop:
        for:
          value: file_info
          in: ${files}
          steps:
            - upload_file:
                call: googleapis.storage.v1.objects.insert
                args:
                  bucket: ${bucket_name}
                  uploadType: "media"
                  name: ${export_folder + "/" + file_info.filename}
                  body:
                    data: ${file_info.content}
                result: upload_response

            - track_upload:
                assign:
                  - uploaded_files: ${list.concat(uploaded_files, [file_info.filename])}

            - log_file_upload:
                call: sys.log
                args:
                  text: ${"üìÅ Uploaded: " + file_info.filename + " (" + file_info.size + ")"}
                  severity: INFO

    - return_upload_result:
        return:
          uploaded_files: ${uploaded_files}
          total_count: ${len(uploaded_files)}
